local listenProtocol = 'quarry'


function syncRequest(qName)
	message = {messageType= 'syncRequest', quarryName = qName}
	sync.broadcast(message,tostring(message), listenProtocol)

	received = sync.listen(qName)

	print(textutils.unserialize(received.message))
	print (received.message.messageType)
	while received.message.messageType != 'sync' do
		received = sync.listen(qName)
	end

	return received.message.list
end

function syncB(listArg, protocol)
	message = {list = listArg, messageType= 'sync'}
	sync.broadcast(message,tostring(message), protocol)
end


function syncLoop(protocol)
	while true do
		message = sync.listenB(protocol)
		
		if message.messageType == 'sync' then

		end
	end
end


function listenLoop(protocol, list)
	while true do
		message = sync.listen(listenProtocol)

		if message.messageType == 'syncRequest' then
			if message.quarryName == protocol then
				syncB(list,protocol)
			end
		elseif message.messageType == 'list' then
		elseif message.messageType == 'status' then
		end



	end
end